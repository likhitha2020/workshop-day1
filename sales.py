# -*- coding: utf-8 -*-
"""sales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AUe0CyarqsfKYmA2_YzF07gwCxr8c6xV
"""

import numpy as np
import pandas as pd
import plotly.express as px
import seaborn as sns
import plotly.graph_objects as go
from sklearn.preprocessing import MinMaxScaler
from sklearn.cluster import KMeans
from sklearn.impute import SimpleImputer

sales = pd.read_csv("/supermarket_sales - Sheet1.csv")
sales.drop('City',inplace=True,axis=1)

X = sales.iloc[:,:9].values
y = sales.iloc[:,6].values

sales.head().style.background_gradient(cmap =sns.cubehelix_palette(as_cmap=True))

fig = px.pie(sales, 'Product line',color_discrete_sequence=['#491D8B','#7D3AC1','#EB548C'],title='Sales Distribution',template='plotly')
fig.show()

fig = px.box(data_frame=sales, x='Product line',y='Date',color='Product line',color_discrete_sequence=['#29066B','#7D3AC1','#EB548C'],orientation='v')
fig.show()

fig = px.histogram(data_frame=sales, x='Rating',color='Product line',color_discrete_sequence=['#491D8B','#7D3AC1','#EB548C'],nbins=40)
fig.show()

fig = px.box(data_frame=sales, x='Product line',y='Rating',color='Product line',color_discrete_sequence=['#29066B','#7D3AC1','#EB548C'],orientation='v')
fig.show()

fig = px.histogram(data_frame=sales, x='Total',color='Payment',color_discrete_sequence=['#491D8B','#7D3AC1','#EB548C'],nbins=30)
fig.show()

fig = px.box(data_frame=sales, x='Payment',y='Total',color='Payment',color_discrete_sequence=['#29066B','#7D3AC1','#EB548C'],orientation='v')
fig.show()

fig = px.histogram(data_frame=sales, x='gross income',color='Product line',color_discrete_sequence=['#491D8B','#7D3AC1','#EB548C'],nbins=30)
fig.show()

fig = px.box(data_frame=sales, x='Product line',y='gross income',color='Product line',color_discrete_sequence=['#29066B','#7D3AC1','#EB548C'],orientation='v')
fig.show()

fig = px.scatter(data_frame=sales, x='Product line',y='gross income'
           ,color='Product line',size='Total',template='seaborn',color_discrete_sequence=['#491D8B','#7D3AC1','#EB548C'],)

fig.update_layout(width=800, height=600,
                  xaxis=dict(color="#BF40BF"),
                 yaxis=dict(color="#BF40BF"))
fig.show()

fig = px.scatter(data_frame=sales, x='Total',y='gross income'
           ,color='Payment',size='Unit price',template='seaborn',color_discrete_sequence=['#491D8B','#7D3AC1','#EB548C'],)

fig.update_layout(width=800, height=400,
                  xaxis=dict(color="#BF40BF"),
                 yaxis=dict(color="#BF40BF"))
fig.show()

sse = []
for i in range(1,9):
    kmeans = KMeans(n_clusters=i , max_iter=300)
    kmeans.fit(X)
    sse.append(kmeans.inertia_)

fig = px.line(y=sse,template="seaborn",title='Eblow Method')
fig.update_layout(width=800, height=600,
title_font_color="#BF40BF",
xaxis=dict(color="#BF40BF",title="Clusters"),
yaxis=dict(color="#BF40BF",title="SSE"))